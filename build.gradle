import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

plugins {
    id 'org.springframework.boot' version '3.3.1'
    id 'io.spring.dependency-management' version '1.1.0'
    id 'org.jetbrains.kotlin.plugin.jpa' version '1.9.0'
    id 'org.jetbrains.kotlin.jvm' version '1.9.0'
    id 'org.jetbrains.kotlin.plugin.spring' version '1.9.0'
}

apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-jpa'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'idea'

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    set('queryDslVer', '5.0.0')
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-hateoas'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.6.0'
    implementation "com.querydsl:querydsl-jpa:${queryDslVer}:jakarta"
    implementation 'com.fasterxml.jackson.module:jackson-module-kotlin'
    implementation 'org.jetbrains.kotlin:kotlin-reflect'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'org.postgresql:postgresql'
    kapt "com.querydsl:querydsl-apt:${queryDslVer}:jakarta"
    kapt 'org.projectlombok:lombok'
    kapt 'jakarta.persistence:jakarta.persistence-api:3.1.0'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

}

tasks.withType(KotlinCompile).configureEach {
    kotlinOptions {
        freeCompilerArgs = ['-Xjsr305=strict']
        jvmTarget = '17'
    }
}

tasks.named('test') {
    useJUnitPlatform()
}

bootJar {
    archiveFileName = 'api.jar'
}
